# ----------------------------------------------------------------------
# |
# |  Questions
# |
# ----------------------------------------------------------------------
project_name:
  type: str
  help: Enter the name of the project.
  validator: |-
    {% if not (project_name | regex_search('^[a-zA-Z][a-zA-Z0-9_-]*$')) %}
    Project names must 1) Start with a letter and 2) Only contain alphanumeric characters, hyphens, and underscores
    {% endif %}

author_name:
  type: str
  help: Enter the name of the author or organization.
  validator: |-
    {% if not author_name %}
    Please enter a valid author or organization.
    {% endif %}

author_email:
  type: str
  help: Enter the email address of the author or organization.
  validator: |-
    {% if not author_email %}
    Please enter a valid email address.
    {% endif %}

github_host:
  type: str
  help: Enter the GitHub URL (note that this should not include the user/organization or repository names).
  default: https://github.com
  validator: |-
    {% if not github_host %}
    Please enter a valid URL.
    {% endif %}

github_username:
  type: str
  help: Enter your GitHub user/organization name.
  validator: |-
    {% if not github_username %}
    Please enter a valid GitHub user/organization name.
    {% endif %}

github_repo_name:
  type: str
  help: Enter the name of your GitHub repository.
  default: "{{ project_name | slugify }}"
  validator: |-
    {% if not github_repo_name %}
    Please enter a valid GitHub repository name.
    {% endif %}

github_url:
  type: str
  default: "{{ github_host }}/{{ github_username }}/{{ github_repo_name }}"
  when: False

python_package_name:
  type: str
  help: Enter the name of the Python package.
  default: "{{ project_name | pythonpackageify }}"
  validator: |-
    {% if not (python_package_name | regex_search('^[a-zA-Z0-9_]+$')) %}
    Python package names may only contain alphanumeric characters and underscores.
    {% endif %}

python_versions:
  type: str
  help: Enter a comma-delimited list of Python versions to support.
  default: "3.10, 3.11, 3.12, 3.13"
  validator: |-
    {% if not (python_versions | regex_search('^(\d+\.\d+)(\s*,\s*\d+\.\d+)*,?$')) %}
    Please enter one or more valid Python versions, separated by commas.
    {% endif %}

license:
  type: str
  help: Select the open source license you would like to use for this project. More information about these licenses can be found at https://choosealicense.com/.
  choices:
    - null
    - Apache-2.0
    - BSD-3-Clause-Clear
    - BSL-1.0
    - GPL-3.0-or-later
    - MIT
  default: MIT

coverage_badge_gist_id:
  type: str
  help: |-
    Enter the Gist ID used to store dynamic code coverage information produced during the Continuous Integration process. This value may be left
       blank if you do not want to store this information between runs.

       To create a GitHub Gist ID:

         1) Visit https://gist.github.com.
         2) Enter the following values in their respective fields:

             Gist description...:              Gist used by GitHub Action workflows to store and retrieve dynamic information (oftentimes used to create and display badges).
             Filename including extension...:  README.md
             File contents:                    Gist used by GitHub Action workflows to store and retrieve dynamic information (oftentimes used to create and display badges).

         3) Click the "Create secret gist" button.
         4) Note the GitHub username and Gist ID.
         5) Provide the Gist ID as an answer to this question, and the GitHub username as the answer to the next question.

                                      /    GitHub username     \
                                     /                          \
             https://gist.github.com/this_is_the_github_username/4c10281ff1abc26cafcb9a5f9a8a443e
                                                                 \                              /
                                                                  \           Gist ID          /

       :
  default: ""

coverage_badge_gist_username:
  type: str
  help: "Enter the Gist username associated with the Gist ID used to store dynamic code coverage information."
  default: "{{ github_username }}"
  when: "{{ coverage_badge_gist_id }}"

sign_artifacts_question:
  type: bool
  help: Would you like to sign artifacts created during the Continuous Integration process using minisign?
  default: true

sign_artifacts_public_key:
  type: str
  help: This value will be populated automatically.
  default: ""
  when: False

all_questions_have_been_answered:
  type: bool
  help: |-
    This value must remain the last value in this list of copier configuration values. It will be
    populated automatically by copier and never displayed to the user. copier will set this value
    to True when all the other values have been populated based on the user's answers to the
    questions.

    `context.py` uses this value to determine if the user has answered all questions. Once all
    questions have been answered, it will update the copier context based on those answers.
  default: True
  when: False

# ----------------------------------------------------------------------
# |
# |  Configuration
# |
# ----------------------------------------------------------------------
_subdirectory: template
_templates_suffix: ""

_tasks:
  - python __tools/UvInit.py
  - python __licenses/__postprocess.py
  - python __post_generation_instructions/__postprocess.py
  - python __readme/__postprocess.py
  - python __tools/Cleanup.py
  - python -c "import shutil; shutil.rmtree('__tools');"

_jinja_extensions:
  - copier_templates_extensions.TemplateExtensionLoader
  - extensions/context.py:ContextUpdater
  - extensions/slugify.py:SlugifyExtension
  - extensions/slugify.py:PythonPackageifyExtension
  - extensions/slugify.py:PythonStrictPackageifyExtension
  - extensions/to_python_list.py:ToPythonListExtension
