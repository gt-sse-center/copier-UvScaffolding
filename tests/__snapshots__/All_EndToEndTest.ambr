# serializer version: 1
# name: test_All[Apache-2.0]
  dict({
    '.copier-answers.yml': '''
      # Changes here will be overwritten by Copier; DO NOT MODIFY THIS FILE DIRECTLY!
      #
      # This file was generated using copier (https://copier.readthedocs.io/) with the
      # template copier-UvScaffolding (https://github.com/gt-sse-center/copier-UvScaffolding).
      # Additional information (including instructions on how to use this template with copier) is
      # available at https://github.com/gt-sse-center/copier-UvScaffolding.
      #
      
      _commit: <<commit>>
      _src_path: <<cwd>>
      author_email: <<author_email>>
      author_name: <<author_name>>
      github_host: https://github.com
      github_repo_name: <<github_repo_name>>
      github_username: <<github_username>>
      license: Apache-2.0
      project_name: this_is_the_project_name
      python_package_name: this_is_the_project_name
  
    ''',
    '.github/ISSUE_TEMPLATE/bug_report.md': '''
      ---
      name: Bug report
      about: Create a report to help us improve.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Describe the bug
      A clear and concise description of what the bug is.
      
      ## To Reproduce
      Steps to reproduce the behavior:
      1. Go to '...'
      2. Click on '....'
      3. Scroll down to '....'
      4. See error
      
      ## Expected behavior
      A clear and concise description of what you expected to happen.
      
      ## Screenshots
      If applicable, add screenshots to help explain your problem.
      
      ## Environment (please complete the following information):
       - OS: [e.g. iOS]
       - Python Version: [e.g. 3.13, 3.12, 3.11, etc.]
       - dbrownell_DevTools Version [e.g. 1.2.3]
      
      ## Additional context
      Add any other context about the problem here.
  
    ''',
    '.github/ISSUE_TEMPLATE/config.yml': '''
      blank_issues_enabled: false
  
    ''',
    '.github/ISSUE_TEMPLATE/custom.md': '''
      ---
      name: Custom issue template
      about: Create an issue that isn't a bug or feature request.
      title: ''
      labels: ''
      assignees: ''
      
      ---
  
    ''',
    '.github/ISSUE_TEMPLATE/feature_request.md': '''
      ---
      name: Feature request
      about: Suggest an idea for this project.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Is your feature request related to a problem? Please describe.
      A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
      
      ## Describe the solution you'd like
      A clear and concise description of what you want to happen.
      
      ## Describe alternatives you've considered
      A clear and concise description of any alternative solutions or features you've considered.
      
      ## Additional context
      Add any other context or screenshots about the feature request here.
  
    ''',
    '.github/pull_request_template.md': '''
      ## :pencil: Description
      Please include a summary of the change.
      
      ## :gear: Work Item
      Please include link to the corresponding GitHub Issue or Project work item.
      
      ## :movie_camera: Demo
      Please provide any images, GIFs, or videos that show the effect of your changes (if applicable). A picture is worth a thousand words.
  
    ''',
    '.gitignore': '''
      # Python-generated files
      __pycache__/
      *.py[oc]
      build/
      dist/
      wheels/
      *.egg-info
      
      # Virtual environments
      .venv
      .coverage
      .DS_Store
      .vscode
      minisign_key.pri
    ''',
    '.python-version': '<<python_version>>',
    'LICENSE': '''
      Copyright <<year>> <<author_name>>
      
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
      
          http://www.apache.org/licenses/LICENSE-2.0
      
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
  
    ''',
    'README.md': '',
    'pyproject.toml': '''
      [project]
      name = "this-is-the-project-name"
      description = "Add your description here"
      readme = "README.md"
      requires-python = ">= <<python_version>>"
      dependencies = []
      dynamic = ["version"]
      classifiers = [
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
      ]
      
      [project.license]
      text = "Apache-2.0"
      
      [project.urls]
      Homepage = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Documentation = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Repository = "https://github.com/<<github_username>>/<<github_repo_name>>"
      
      [build-system]
      requires = ["hatchling"]
      build-backend = "hatchling.build"
      
      [dependency-groups]
      dev = ["autogitsemver", "pytest", "pytest", "ruff"]
      
      [tool.hatch.version]
      path = "src/this_is_the_project_name/__init__.py"
      
      [tool.pytest.ini_options]
      addopts = "--verbose -vv --capture=no --cov=this_is_the_project_name --cov-fail-under=95.0"
      
      [tool.ruff]
      line-length = 110
      
      [tool.ruff.lint]
      exclude = ["tests/**"]
      
      select = ["ALL"]
      
      ignore = [
          "ANN002", # Missing type annotation for `*args`
          "ANN003", # Missing type annotation for `**kwargs`
          "BLE001", # Do not catch blind exception: `Exception`
          "COM812", # Trailing comma missing
          "D202", # No blank lines allowed after function docstring
          "E501", # Line too long
          "I001", # Import block is un-sorted or un-formatted
          "N802", # Function name `xxx` should be lowercase
          "N999", # Invalid module name
          "S101", # Use of assert detected
          "UP032", # Use f-string instead of `format` call
      ]
      
      [tool.ruff.lint.mccabe]
      max-complexity = 15
      
      [tool.ruff.lint.pylint]
      max-args = 10
      max-branches = 20
      max-returns = 20
  
    ''',
    'src/AutoGitSemVer.yaml': '''
      # This file is used by AutoGitSemVer to configure the semantic version of this package. It indicates
      # that AutoGitSemVer should only look at changes in this directory, its descendants, and files
      # specified in this list when calculating the semantic version for the package.
      additional_dependencies:
        - "../pyproject.toml"
        - "../README.md"
        - "../uv.lock"
  
    ''',
    'src/this_is_the_project_name/__init__.py': '''
      def hello() -> str:
          return "Hello from this-is-the-project-name!"
      
      # Wheel names will be generated according to this value. Do not manually modify this value; instead
      # update it according to committed changes by running this command from the root of the repository:
      #
      #   uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/this_is_the_project_name/__init__.py ./src
      #
      __version__ = "0.1.0"
  
    ''',
    'src/this_is_the_project_name/py.typed': '',
  })
# ---
# name: test_All[BSD-3-Clause-Clear]
  dict({
    '.copier-answers.yml': '''
      # Changes here will be overwritten by Copier; DO NOT MODIFY THIS FILE DIRECTLY!
      #
      # This file was generated using copier (https://copier.readthedocs.io/) with the
      # template copier-UvScaffolding (https://github.com/gt-sse-center/copier-UvScaffolding).
      # Additional information (including instructions on how to use this template with copier) is
      # available at https://github.com/gt-sse-center/copier-UvScaffolding.
      #
      
      _commit: <<commit>>
      _src_path: <<cwd>>
      author_email: <<author_email>>
      author_name: <<author_name>>
      github_host: https://github.com
      github_repo_name: <<github_repo_name>>
      github_username: <<github_username>>
      license: BSD-3-Clause-Clear
      project_name: this_is_the_project_name
      python_package_name: this_is_the_project_name
  
    ''',
    '.github/ISSUE_TEMPLATE/bug_report.md': '''
      ---
      name: Bug report
      about: Create a report to help us improve.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Describe the bug
      A clear and concise description of what the bug is.
      
      ## To Reproduce
      Steps to reproduce the behavior:
      1. Go to '...'
      2. Click on '....'
      3. Scroll down to '....'
      4. See error
      
      ## Expected behavior
      A clear and concise description of what you expected to happen.
      
      ## Screenshots
      If applicable, add screenshots to help explain your problem.
      
      ## Environment (please complete the following information):
       - OS: [e.g. iOS]
       - Python Version: [e.g. 3.13, 3.12, 3.11, etc.]
       - dbrownell_DevTools Version [e.g. 1.2.3]
      
      ## Additional context
      Add any other context about the problem here.
  
    ''',
    '.github/ISSUE_TEMPLATE/config.yml': '''
      blank_issues_enabled: false
  
    ''',
    '.github/ISSUE_TEMPLATE/custom.md': '''
      ---
      name: Custom issue template
      about: Create an issue that isn't a bug or feature request.
      title: ''
      labels: ''
      assignees: ''
      
      ---
  
    ''',
    '.github/ISSUE_TEMPLATE/feature_request.md': '''
      ---
      name: Feature request
      about: Suggest an idea for this project.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Is your feature request related to a problem? Please describe.
      A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
      
      ## Describe the solution you'd like
      A clear and concise description of what you want to happen.
      
      ## Describe alternatives you've considered
      A clear and concise description of any alternative solutions or features you've considered.
      
      ## Additional context
      Add any other context or screenshots about the feature request here.
  
    ''',
    '.github/pull_request_template.md': '''
      ## :pencil: Description
      Please include a summary of the change.
      
      ## :gear: Work Item
      Please include link to the corresponding GitHub Issue or Project work item.
      
      ## :movie_camera: Demo
      Please provide any images, GIFs, or videos that show the effect of your changes (if applicable). A picture is worth a thousand words.
  
    ''',
    '.gitignore': '''
      # Python-generated files
      __pycache__/
      *.py[oc]
      build/
      dist/
      wheels/
      *.egg-info
      
      # Virtual environments
      .venv
      .coverage
      .DS_Store
      .vscode
      minisign_key.pri
    ''',
    '.python-version': '<<python_version>>',
    'LICENSE': '''
      Copyright <<year>> <<author_name>>
      
      Redistribution and use in source and binary forms, with or without
      modification are permitted provided that the following conditions are met:
      
      1. Redistributions of source code must retain the above copyright notice,
         this list of conditions and the following disclaimer.
      
      2. Redistributions in binary form must reproduce the above copyright notice,
         this list of condition and the following disclaimer in the documentation
         and/or other materials provided with the distribution.
      
      3. Neither the name of the copyright holder nor the names of its
         contributors may be used to endorse or promote products derived from this
         software without specific prior written permission.
      
      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS”
      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
      ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
      CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
      SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
      INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
      CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
      ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
      POSSIBILITY OF SUCH DAMAGE.
  
    ''',
    'README.md': '',
    'pyproject.toml': '''
      [project]
      name = "this-is-the-project-name"
      description = "Add your description here"
      readme = "README.md"
      requires-python = ">= <<python_version>>"
      dependencies = []
      dynamic = ["version"]
      classifiers = [
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
      ]
      
      [project.license]
      text = "BSD-3-Clause-Clear"
      
      [project.urls]
      Homepage = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Documentation = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Repository = "https://github.com/<<github_username>>/<<github_repo_name>>"
      
      [build-system]
      requires = ["hatchling"]
      build-backend = "hatchling.build"
      
      [dependency-groups]
      dev = ["autogitsemver", "pytest", "pytest", "ruff"]
      
      [tool.hatch.version]
      path = "src/this_is_the_project_name/__init__.py"
      
      [tool.pytest.ini_options]
      addopts = "--verbose -vv --capture=no --cov=this_is_the_project_name --cov-fail-under=95.0"
      
      [tool.ruff]
      line-length = 110
      
      [tool.ruff.lint]
      exclude = ["tests/**"]
      
      select = ["ALL"]
      
      ignore = [
          "ANN002", # Missing type annotation for `*args`
          "ANN003", # Missing type annotation for `**kwargs`
          "BLE001", # Do not catch blind exception: `Exception`
          "COM812", # Trailing comma missing
          "D202", # No blank lines allowed after function docstring
          "E501", # Line too long
          "I001", # Import block is un-sorted or un-formatted
          "N802", # Function name `xxx` should be lowercase
          "N999", # Invalid module name
          "S101", # Use of assert detected
          "UP032", # Use f-string instead of `format` call
      ]
      
      [tool.ruff.lint.mccabe]
      max-complexity = 15
      
      [tool.ruff.lint.pylint]
      max-args = 10
      max-branches = 20
      max-returns = 20
  
    ''',
    'src/AutoGitSemVer.yaml': '''
      # This file is used by AutoGitSemVer to configure the semantic version of this package. It indicates
      # that AutoGitSemVer should only look at changes in this directory, its descendants, and files
      # specified in this list when calculating the semantic version for the package.
      additional_dependencies:
        - "../pyproject.toml"
        - "../README.md"
        - "../uv.lock"
  
    ''',
    'src/this_is_the_project_name/__init__.py': '''
      def hello() -> str:
          return "Hello from this-is-the-project-name!"
      
      # Wheel names will be generated according to this value. Do not manually modify this value; instead
      # update it according to committed changes by running this command from the root of the repository:
      #
      #   uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/this_is_the_project_name/__init__.py ./src
      #
      __version__ = "0.1.0"
  
    ''',
    'src/this_is_the_project_name/py.typed': '',
  })
# ---
# name: test_All[BSL-1.0]
  dict({
    '.copier-answers.yml': '''
      # Changes here will be overwritten by Copier; DO NOT MODIFY THIS FILE DIRECTLY!
      #
      # This file was generated using copier (https://copier.readthedocs.io/) with the
      # template copier-UvScaffolding (https://github.com/gt-sse-center/copier-UvScaffolding).
      # Additional information (including instructions on how to use this template with copier) is
      # available at https://github.com/gt-sse-center/copier-UvScaffolding.
      #
      
      _commit: <<commit>>
      _src_path: <<cwd>>
      author_email: <<author_email>>
      author_name: <<author_name>>
      github_host: https://github.com
      github_repo_name: <<github_repo_name>>
      github_username: <<github_username>>
      license: BSL-1.0
      project_name: this_is_the_project_name
      python_package_name: this_is_the_project_name
  
    ''',
    '.github/ISSUE_TEMPLATE/bug_report.md': '''
      ---
      name: Bug report
      about: Create a report to help us improve.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Describe the bug
      A clear and concise description of what the bug is.
      
      ## To Reproduce
      Steps to reproduce the behavior:
      1. Go to '...'
      2. Click on '....'
      3. Scroll down to '....'
      4. See error
      
      ## Expected behavior
      A clear and concise description of what you expected to happen.
      
      ## Screenshots
      If applicable, add screenshots to help explain your problem.
      
      ## Environment (please complete the following information):
       - OS: [e.g. iOS]
       - Python Version: [e.g. 3.13, 3.12, 3.11, etc.]
       - dbrownell_DevTools Version [e.g. 1.2.3]
      
      ## Additional context
      Add any other context about the problem here.
  
    ''',
    '.github/ISSUE_TEMPLATE/config.yml': '''
      blank_issues_enabled: false
  
    ''',
    '.github/ISSUE_TEMPLATE/custom.md': '''
      ---
      name: Custom issue template
      about: Create an issue that isn't a bug or feature request.
      title: ''
      labels: ''
      assignees: ''
      
      ---
  
    ''',
    '.github/ISSUE_TEMPLATE/feature_request.md': '''
      ---
      name: Feature request
      about: Suggest an idea for this project.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Is your feature request related to a problem? Please describe.
      A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
      
      ## Describe the solution you'd like
      A clear and concise description of what you want to happen.
      
      ## Describe alternatives you've considered
      A clear and concise description of any alternative solutions or features you've considered.
      
      ## Additional context
      Add any other context or screenshots about the feature request here.
  
    ''',
    '.github/pull_request_template.md': '''
      ## :pencil: Description
      Please include a summary of the change.
      
      ## :gear: Work Item
      Please include link to the corresponding GitHub Issue or Project work item.
      
      ## :movie_camera: Demo
      Please provide any images, GIFs, or videos that show the effect of your changes (if applicable). A picture is worth a thousand words.
  
    ''',
    '.gitignore': '''
      # Python-generated files
      __pycache__/
      *.py[oc]
      build/
      dist/
      wheels/
      *.egg-info
      
      # Virtual environments
      .venv
      .coverage
      .DS_Store
      .vscode
      minisign_key.pri
    ''',
    '.python-version': '<<python_version>>',
    'LICENSE': '''
      Copyright <<year>> <<author_name>>
      
      Boost Software License - Version 1.0 - August 17th, 2003
      
      Permission is hereby granted, free of charge, to any person or organization
      obtaining a copy of the software and accompanying documentation covered by
      this license (the "Software") to use, reproduce, display, distribute,
      execute, and transmit the Software, and to prepare derivative works of the
      Software, and to permit third-parties to whom the Software is furnished to
      do so, all subject to the following:
      
      The copyright notices in the Software and this entire statement, including
      the above license grant, this restriction and the following disclaimer,
      must be included in all copies of the Software, in whole or in part, and
      all derivative works of the Software, unless such copies or derivative
      works are solely in the form of machine-executable object code generated by
      a source language processor.
      
      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
      SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
      FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
      ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
      DEALINGS IN THE SOFTWARE.
  
    ''',
    'README.md': '',
    'pyproject.toml': '''
      [project]
      name = "this-is-the-project-name"
      description = "Add your description here"
      readme = "README.md"
      requires-python = ">= <<python_version>>"
      dependencies = []
      dynamic = ["version"]
      classifiers = [
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
      ]
      
      [project.license]
      text = "BSL-1.0"
      
      [project.urls]
      Homepage = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Documentation = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Repository = "https://github.com/<<github_username>>/<<github_repo_name>>"
      
      [build-system]
      requires = ["hatchling"]
      build-backend = "hatchling.build"
      
      [dependency-groups]
      dev = ["autogitsemver", "pytest", "pytest", "ruff"]
      
      [tool.hatch.version]
      path = "src/this_is_the_project_name/__init__.py"
      
      [tool.pytest.ini_options]
      addopts = "--verbose -vv --capture=no --cov=this_is_the_project_name --cov-fail-under=95.0"
      
      [tool.ruff]
      line-length = 110
      
      [tool.ruff.lint]
      exclude = ["tests/**"]
      
      select = ["ALL"]
      
      ignore = [
          "ANN002", # Missing type annotation for `*args`
          "ANN003", # Missing type annotation for `**kwargs`
          "BLE001", # Do not catch blind exception: `Exception`
          "COM812", # Trailing comma missing
          "D202", # No blank lines allowed after function docstring
          "E501", # Line too long
          "I001", # Import block is un-sorted or un-formatted
          "N802", # Function name `xxx` should be lowercase
          "N999", # Invalid module name
          "S101", # Use of assert detected
          "UP032", # Use f-string instead of `format` call
      ]
      
      [tool.ruff.lint.mccabe]
      max-complexity = 15
      
      [tool.ruff.lint.pylint]
      max-args = 10
      max-branches = 20
      max-returns = 20
  
    ''',
    'src/AutoGitSemVer.yaml': '''
      # This file is used by AutoGitSemVer to configure the semantic version of this package. It indicates
      # that AutoGitSemVer should only look at changes in this directory, its descendants, and files
      # specified in this list when calculating the semantic version for the package.
      additional_dependencies:
        - "../pyproject.toml"
        - "../README.md"
        - "../uv.lock"
  
    ''',
    'src/this_is_the_project_name/__init__.py': '''
      def hello() -> str:
          return "Hello from this-is-the-project-name!"
      
      # Wheel names will be generated according to this value. Do not manually modify this value; instead
      # update it according to committed changes by running this command from the root of the repository:
      #
      #   uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/this_is_the_project_name/__init__.py ./src
      #
      __version__ = "0.1.0"
  
    ''',
    'src/this_is_the_project_name/py.typed': '',
  })
# ---
# name: test_All[GPL-3.0-or-later]
  dict({
    '.copier-answers.yml': '''
      # Changes here will be overwritten by Copier; DO NOT MODIFY THIS FILE DIRECTLY!
      #
      # This file was generated using copier (https://copier.readthedocs.io/) with the
      # template copier-UvScaffolding (https://github.com/gt-sse-center/copier-UvScaffolding).
      # Additional information (including instructions on how to use this template with copier) is
      # available at https://github.com/gt-sse-center/copier-UvScaffolding.
      #
      
      _commit: <<commit>>
      _src_path: <<cwd>>
      author_email: <<author_email>>
      author_name: <<author_name>>
      github_host: https://github.com
      github_repo_name: <<github_repo_name>>
      github_username: <<github_username>>
      license: GPL-3.0-or-later
      project_name: this_is_the_project_name
      python_package_name: this_is_the_project_name
  
    ''',
    '.github/ISSUE_TEMPLATE/bug_report.md': '''
      ---
      name: Bug report
      about: Create a report to help us improve.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Describe the bug
      A clear and concise description of what the bug is.
      
      ## To Reproduce
      Steps to reproduce the behavior:
      1. Go to '...'
      2. Click on '....'
      3. Scroll down to '....'
      4. See error
      
      ## Expected behavior
      A clear and concise description of what you expected to happen.
      
      ## Screenshots
      If applicable, add screenshots to help explain your problem.
      
      ## Environment (please complete the following information):
       - OS: [e.g. iOS]
       - Python Version: [e.g. 3.13, 3.12, 3.11, etc.]
       - dbrownell_DevTools Version [e.g. 1.2.3]
      
      ## Additional context
      Add any other context about the problem here.
  
    ''',
    '.github/ISSUE_TEMPLATE/config.yml': '''
      blank_issues_enabled: false
  
    ''',
    '.github/ISSUE_TEMPLATE/custom.md': '''
      ---
      name: Custom issue template
      about: Create an issue that isn't a bug or feature request.
      title: ''
      labels: ''
      assignees: ''
      
      ---
  
    ''',
    '.github/ISSUE_TEMPLATE/feature_request.md': '''
      ---
      name: Feature request
      about: Suggest an idea for this project.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Is your feature request related to a problem? Please describe.
      A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
      
      ## Describe the solution you'd like
      A clear and concise description of what you want to happen.
      
      ## Describe alternatives you've considered
      A clear and concise description of any alternative solutions or features you've considered.
      
      ## Additional context
      Add any other context or screenshots about the feature request here.
  
    ''',
    '.github/pull_request_template.md': '''
      ## :pencil: Description
      Please include a summary of the change.
      
      ## :gear: Work Item
      Please include link to the corresponding GitHub Issue or Project work item.
      
      ## :movie_camera: Demo
      Please provide any images, GIFs, or videos that show the effect of your changes (if applicable). A picture is worth a thousand words.
  
    ''',
    '.gitignore': '''
      # Python-generated files
      __pycache__/
      *.py[oc]
      build/
      dist/
      wheels/
      *.egg-info
      
      # Virtual environments
      .venv
      .coverage
      .DS_Store
      .vscode
      minisign_key.pri
    ''',
    '.python-version': '<<python_version>>',
    'LICENSE': '''
      Copyright (C) <<year>> <<author_name>>
      
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see <https://www.gnu.org/licenses/>.
  
    ''',
    'README.md': '',
    'pyproject.toml': '''
      [project]
      name = "this-is-the-project-name"
      description = "Add your description here"
      readme = "README.md"
      requires-python = ">= <<python_version>>"
      dependencies = []
      dynamic = ["version"]
      classifiers = [
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
      ]
      
      [project.license]
      text = "GPL-3.0-or-later"
      
      [project.urls]
      Homepage = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Documentation = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Repository = "https://github.com/<<github_username>>/<<github_repo_name>>"
      
      [build-system]
      requires = ["hatchling"]
      build-backend = "hatchling.build"
      
      [dependency-groups]
      dev = ["autogitsemver", "pytest", "pytest", "ruff"]
      
      [tool.hatch.version]
      path = "src/this_is_the_project_name/__init__.py"
      
      [tool.pytest.ini_options]
      addopts = "--verbose -vv --capture=no --cov=this_is_the_project_name --cov-fail-under=95.0"
      
      [tool.ruff]
      line-length = 110
      
      [tool.ruff.lint]
      exclude = ["tests/**"]
      
      select = ["ALL"]
      
      ignore = [
          "ANN002", # Missing type annotation for `*args`
          "ANN003", # Missing type annotation for `**kwargs`
          "BLE001", # Do not catch blind exception: `Exception`
          "COM812", # Trailing comma missing
          "D202", # No blank lines allowed after function docstring
          "E501", # Line too long
          "I001", # Import block is un-sorted or un-formatted
          "N802", # Function name `xxx` should be lowercase
          "N999", # Invalid module name
          "S101", # Use of assert detected
          "UP032", # Use f-string instead of `format` call
      ]
      
      [tool.ruff.lint.mccabe]
      max-complexity = 15
      
      [tool.ruff.lint.pylint]
      max-args = 10
      max-branches = 20
      max-returns = 20
  
    ''',
    'src/AutoGitSemVer.yaml': '''
      # This file is used by AutoGitSemVer to configure the semantic version of this package. It indicates
      # that AutoGitSemVer should only look at changes in this directory, its descendants, and files
      # specified in this list when calculating the semantic version for the package.
      additional_dependencies:
        - "../pyproject.toml"
        - "../README.md"
        - "../uv.lock"
  
    ''',
    'src/this_is_the_project_name/__init__.py': '''
      def hello() -> str:
          return "Hello from this-is-the-project-name!"
      
      # Wheel names will be generated according to this value. Do not manually modify this value; instead
      # update it according to committed changes by running this command from the root of the repository:
      #
      #   uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/this_is_the_project_name/__init__.py ./src
      #
      __version__ = "0.1.0"
  
    ''',
    'src/this_is_the_project_name/py.typed': '',
  })
# ---
# name: test_All[MIT]
  dict({
    '.copier-answers.yml': '''
      # Changes here will be overwritten by Copier; DO NOT MODIFY THIS FILE DIRECTLY!
      #
      # This file was generated using copier (https://copier.readthedocs.io/) with the
      # template copier-UvScaffolding (https://github.com/gt-sse-center/copier-UvScaffolding).
      # Additional information (including instructions on how to use this template with copier) is
      # available at https://github.com/gt-sse-center/copier-UvScaffolding.
      #
      
      _commit: <<commit>>
      _src_path: <<cwd>>
      author_email: <<author_email>>
      author_name: <<author_name>>
      github_host: https://github.com
      github_repo_name: <<github_repo_name>>
      github_username: <<github_username>>
      license: MIT
      project_name: this_is_the_project_name
      python_package_name: this_is_the_project_name
  
    ''',
    '.github/ISSUE_TEMPLATE/bug_report.md': '''
      ---
      name: Bug report
      about: Create a report to help us improve.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Describe the bug
      A clear and concise description of what the bug is.
      
      ## To Reproduce
      Steps to reproduce the behavior:
      1. Go to '...'
      2. Click on '....'
      3. Scroll down to '....'
      4. See error
      
      ## Expected behavior
      A clear and concise description of what you expected to happen.
      
      ## Screenshots
      If applicable, add screenshots to help explain your problem.
      
      ## Environment (please complete the following information):
       - OS: [e.g. iOS]
       - Python Version: [e.g. 3.13, 3.12, 3.11, etc.]
       - dbrownell_DevTools Version [e.g. 1.2.3]
      
      ## Additional context
      Add any other context about the problem here.
  
    ''',
    '.github/ISSUE_TEMPLATE/config.yml': '''
      blank_issues_enabled: false
  
    ''',
    '.github/ISSUE_TEMPLATE/custom.md': '''
      ---
      name: Custom issue template
      about: Create an issue that isn't a bug or feature request.
      title: ''
      labels: ''
      assignees: ''
      
      ---
  
    ''',
    '.github/ISSUE_TEMPLATE/feature_request.md': '''
      ---
      name: Feature request
      about: Suggest an idea for this project.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Is your feature request related to a problem? Please describe.
      A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
      
      ## Describe the solution you'd like
      A clear and concise description of what you want to happen.
      
      ## Describe alternatives you've considered
      A clear and concise description of any alternative solutions or features you've considered.
      
      ## Additional context
      Add any other context or screenshots about the feature request here.
  
    ''',
    '.github/pull_request_template.md': '''
      ## :pencil: Description
      Please include a summary of the change.
      
      ## :gear: Work Item
      Please include link to the corresponding GitHub Issue or Project work item.
      
      ## :movie_camera: Demo
      Please provide any images, GIFs, or videos that show the effect of your changes (if applicable). A picture is worth a thousand words.
  
    ''',
    '.gitignore': '''
      # Python-generated files
      __pycache__/
      *.py[oc]
      build/
      dist/
      wheels/
      *.egg-info
      
      # Virtual environments
      .venv
      .coverage
      .DS_Store
      .vscode
      minisign_key.pri
    ''',
    '.python-version': '<<python_version>>',
    'LICENSE': '''
      MIT LICENSE
      
      Copyright (c) <<year>> <<author_name>>
      
      Permission is hereby granted, free of charge, to any person obtaining a copy
      of this software and associated documentation files (the "Software"), to deal
      in the Software without restriction, including without limitation the rights
      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      copies of the Software, and to permit persons to whom the Software is
      furnished to do so, subject to the following conditions:
      
      The above copyright notice and this permission notice shall be included in all
      copies or substantial portions of the Software.
      
      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
      SOFTWARE.
  
    ''',
    'README.md': '',
    'pyproject.toml': '''
      [project]
      name = "this-is-the-project-name"
      description = "Add your description here"
      readme = "README.md"
      requires-python = ">= <<python_version>>"
      dependencies = []
      dynamic = ["version"]
      classifiers = [
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
      ]
      
      [project.license]
      text = "MIT"
      
      [project.urls]
      Homepage = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Documentation = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Repository = "https://github.com/<<github_username>>/<<github_repo_name>>"
      
      [build-system]
      requires = ["hatchling"]
      build-backend = "hatchling.build"
      
      [dependency-groups]
      dev = ["autogitsemver", "pytest", "pytest", "ruff"]
      
      [tool.hatch.version]
      path = "src/this_is_the_project_name/__init__.py"
      
      [tool.pytest.ini_options]
      addopts = "--verbose -vv --capture=no --cov=this_is_the_project_name --cov-fail-under=95.0"
      
      [tool.ruff]
      line-length = 110
      
      [tool.ruff.lint]
      exclude = ["tests/**"]
      
      select = ["ALL"]
      
      ignore = [
          "ANN002", # Missing type annotation for `*args`
          "ANN003", # Missing type annotation for `**kwargs`
          "BLE001", # Do not catch blind exception: `Exception`
          "COM812", # Trailing comma missing
          "D202", # No blank lines allowed after function docstring
          "E501", # Line too long
          "I001", # Import block is un-sorted or un-formatted
          "N802", # Function name `xxx` should be lowercase
          "N999", # Invalid module name
          "S101", # Use of assert detected
          "UP032", # Use f-string instead of `format` call
      ]
      
      [tool.ruff.lint.mccabe]
      max-complexity = 15
      
      [tool.ruff.lint.pylint]
      max-args = 10
      max-branches = 20
      max-returns = 20
  
    ''',
    'src/AutoGitSemVer.yaml': '''
      # This file is used by AutoGitSemVer to configure the semantic version of this package. It indicates
      # that AutoGitSemVer should only look at changes in this directory, its descendants, and files
      # specified in this list when calculating the semantic version for the package.
      additional_dependencies:
        - "../pyproject.toml"
        - "../README.md"
        - "../uv.lock"
  
    ''',
    'src/this_is_the_project_name/__init__.py': '''
      def hello() -> str:
          return "Hello from this-is-the-project-name!"
      
      # Wheel names will be generated according to this value. Do not manually modify this value; instead
      # update it according to committed changes by running this command from the root of the repository:
      #
      #   uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/this_is_the_project_name/__init__.py ./src
      #
      __version__ = "0.1.0"
  
    ''',
    'src/this_is_the_project_name/py.typed': '',
  })
# ---
# name: test_All[None]
  dict({
    '.copier-answers.yml': '''
      # Changes here will be overwritten by Copier; DO NOT MODIFY THIS FILE DIRECTLY!
      #
      # This file was generated using copier (https://copier.readthedocs.io/) with the
      # template copier-UvScaffolding (https://github.com/gt-sse-center/copier-UvScaffolding).
      # Additional information (including instructions on how to use this template with copier) is
      # available at https://github.com/gt-sse-center/copier-UvScaffolding.
      #
      
      _commit: <<commit>>
      _src_path: <<cwd>>
      author_email: <<author_email>>
      author_name: <<author_name>>
      github_host: https://github.com
      github_repo_name: <<github_repo_name>>
      github_username: <<github_username>>
      license: None
      project_name: this_is_the_project_name
      python_package_name: this_is_the_project_name
  
    ''',
    '.github/ISSUE_TEMPLATE/bug_report.md': '''
      ---
      name: Bug report
      about: Create a report to help us improve.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Describe the bug
      A clear and concise description of what the bug is.
      
      ## To Reproduce
      Steps to reproduce the behavior:
      1. Go to '...'
      2. Click on '....'
      3. Scroll down to '....'
      4. See error
      
      ## Expected behavior
      A clear and concise description of what you expected to happen.
      
      ## Screenshots
      If applicable, add screenshots to help explain your problem.
      
      ## Environment (please complete the following information):
       - OS: [e.g. iOS]
       - Python Version: [e.g. 3.13, 3.12, 3.11, etc.]
       - dbrownell_DevTools Version [e.g. 1.2.3]
      
      ## Additional context
      Add any other context about the problem here.
  
    ''',
    '.github/ISSUE_TEMPLATE/config.yml': '''
      blank_issues_enabled: false
  
    ''',
    '.github/ISSUE_TEMPLATE/custom.md': '''
      ---
      name: Custom issue template
      about: Create an issue that isn't a bug or feature request.
      title: ''
      labels: ''
      assignees: ''
      
      ---
  
    ''',
    '.github/ISSUE_TEMPLATE/feature_request.md': '''
      ---
      name: Feature request
      about: Suggest an idea for this project.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Is your feature request related to a problem? Please describe.
      A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
      
      ## Describe the solution you'd like
      A clear and concise description of what you want to happen.
      
      ## Describe alternatives you've considered
      A clear and concise description of any alternative solutions or features you've considered.
      
      ## Additional context
      Add any other context or screenshots about the feature request here.
  
    ''',
    '.github/pull_request_template.md': '''
      ## :pencil: Description
      Please include a summary of the change.
      
      ## :gear: Work Item
      Please include link to the corresponding GitHub Issue or Project work item.
      
      ## :movie_camera: Demo
      Please provide any images, GIFs, or videos that show the effect of your changes (if applicable). A picture is worth a thousand words.
  
    ''',
    '.gitignore': '''
      # Python-generated files
      __pycache__/
      *.py[oc]
      build/
      dist/
      wheels/
      *.egg-info
      
      # Virtual environments
      .venv
      .coverage
      .DS_Store
      .vscode
      minisign_key.pri
    ''',
    '.python-version': '<<python_version>>',
    'README.md': '',
    'pyproject.toml': '''
      [project]
      name = "this-is-the-project-name"
      description = "Add your description here"
      readme = "README.md"
      requires-python = ">= <<python_version>>"
      dependencies = []
      dynamic = ["version"]
      classifiers = [
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
      ]
      
      [project.urls]
      Homepage = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Documentation = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Repository = "https://github.com/<<github_username>>/<<github_repo_name>>"
      
      [build-system]
      requires = ["hatchling"]
      build-backend = "hatchling.build"
      
      [dependency-groups]
      dev = ["autogitsemver", "pytest", "pytest", "ruff"]
      
      [tool.hatch.version]
      path = "src/this_is_the_project_name/__init__.py"
      
      [tool.pytest.ini_options]
      addopts = "--verbose -vv --capture=no --cov=this_is_the_project_name --cov-fail-under=95.0"
      
      [tool.ruff]
      line-length = 110
      
      [tool.ruff.lint]
      exclude = ["tests/**"]
      
      select = ["ALL"]
      
      ignore = [
          "ANN002", # Missing type annotation for `*args`
          "ANN003", # Missing type annotation for `**kwargs`
          "BLE001", # Do not catch blind exception: `Exception`
          "COM812", # Trailing comma missing
          "D202", # No blank lines allowed after function docstring
          "E501", # Line too long
          "I001", # Import block is un-sorted or un-formatted
          "N802", # Function name `xxx` should be lowercase
          "N999", # Invalid module name
          "S101", # Use of assert detected
          "UP032", # Use f-string instead of `format` call
      ]
      
      [tool.ruff.lint.mccabe]
      max-complexity = 15
      
      [tool.ruff.lint.pylint]
      max-args = 10
      max-branches = 20
      max-returns = 20
  
    ''',
    'src/AutoGitSemVer.yaml': '''
      # This file is used by AutoGitSemVer to configure the semantic version of this package. It indicates
      # that AutoGitSemVer should only look at changes in this directory, its descendants, and files
      # specified in this list when calculating the semantic version for the package.
      additional_dependencies:
        - "../pyproject.toml"
        - "../README.md"
        - "../uv.lock"
  
    ''',
    'src/this_is_the_project_name/__init__.py': '''
      def hello() -> str:
          return "Hello from this-is-the-project-name!"
      
      # Wheel names will be generated according to this value. Do not manually modify this value; instead
      # update it according to committed changes by running this command from the root of the repository:
      #
      #   uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/this_is_the_project_name/__init__.py ./src
      #
      __version__ = "0.1.0"
  
    ''',
    'src/this_is_the_project_name/py.typed': '',
  })
# ---
