# serializer version: 1
# name: test_All[]
  dict({
    '.copier-answers.yml': '''
      # Changes here will be overwritten by Copier; DO NOT MODIFY THIS FILE DIRECTLY!
      #
      # This file was generated using copier (https://copier.readthedocs.io/) with the
      # template copier-UvScaffolding (https://github.com/gt-sse-center/copier-UvScaffolding).
      # Additional information (including instructions on how to use this template with copier) is
      # available at https://github.com/gt-sse-center/copier-UvScaffolding.
      #
      
      _commit: <<commit>>
      _src_path: <<cwd>>
      author_email: <<author_email>>
      author_name: <<author_name>>
      github_host: https://github.com
      github_repo_name: <<github_repo_name>>
      github_username: <<github_username>>
      project_name: this_is_the_project_name
      python_package_name: this_is_the_project_name
  
    ''',
    '.github/ISSUE_TEMPLATE/bug_report.md': '''
      ---
      name: Bug report
      about: Create a report to help us improve.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Describe the bug
      A clear and concise description of what the bug is.
      
      ## To Reproduce
      Steps to reproduce the behavior:
      1. Go to '...'
      2. Click on '....'
      3. Scroll down to '....'
      4. See error
      
      ## Expected behavior
      A clear and concise description of what you expected to happen.
      
      ## Screenshots
      If applicable, add screenshots to help explain your problem.
      
      ## Environment (please complete the following information):
       - OS: [e.g. iOS]
       - Python Version: [e.g. 3.13, 3.12, 3.11, etc.]
       - dbrownell_DevTools Version [e.g. 1.2.3]
      
      ## Additional context
      Add any other context about the problem here.
  
    ''',
    '.github/ISSUE_TEMPLATE/config.yml': '''
      blank_issues_enabled: false
  
    ''',
    '.github/ISSUE_TEMPLATE/custom.md': '''
      ---
      name: Custom issue template
      about: Create an issue that isn't a bug or feature request.
      title: ''
      labels: ''
      assignees: ''
      
      ---
  
    ''',
    '.github/ISSUE_TEMPLATE/feature_request.md': '''
      ---
      name: Feature request
      about: Suggest an idea for this project.
      title: ''
      labels: ''
      assignees: ''
      
      ---
      
      ## Is your feature request related to a problem? Please describe.
      A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
      
      ## Describe the solution you'd like
      A clear and concise description of what you want to happen.
      
      ## Describe alternatives you've considered
      A clear and concise description of any alternative solutions or features you've considered.
      
      ## Additional context
      Add any other context or screenshots about the feature request here.
  
    ''',
    '.github/pull_request_template.md': '''
      ## :pencil: Description
      Please include a summary of the change.
      
      ## :gear: Work Item
      Please include link to the corresponding GitHub Issue or Project work item.
      
      ## :movie_camera: Demo
      Please provide any images, GIFs, or videos that show the effect of your changes (if applicable). A picture is worth a thousand words.
  
    ''',
    '.gitignore': '''
      # Python-generated files
      __pycache__/
      *.py[oc]
      build/
      dist/
      wheels/
      *.egg-info
      
      # Virtual environments
      .venv
      .coverage
      .DS_Store
      .vscode
      minisign_key.pri
    ''',
    '.python-version': '''
      3.13
  
    ''',
    'README.md': '',
    'pyproject.toml': '''
      [project]
      name = "this-is-the-project-name"
      description = "Add your description here"
      readme = "README.md"
      authors = [
          { name = "David Brownell", email = "db@davidbrownell.com" }
      ]
      requires-python = ">=3.13"
      dependencies = []
      dynamic = ["version"]
      classifiers = [
          "License :: OSI Approved :: MIT License",
          "Operating System :: MacOS",
          "Operating System :: Microsoft :: Windows",
          "Operating System :: POSIX :: Linux",
          "Programming Language :: Python",
          "Programming Language :: Python :: 3.13",
          "Programming Language :: Python :: 3.12",
          "Programming Language :: Python :: 3.11",
          "Programming Language :: Python :: 3.10",
      ]
      
      [project.urls]
      Homepage = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Documentation = "https://github.com/<<github_username>>/<<github_repo_name>>"
      Repository = "https://github.com/<<github_username>>/<<github_repo_name>>"
      
      [build-system]
      requires = ["hatchling"]
      build-backend = "hatchling.build"
      
      [dependency-groups]
      dev = [
          "pytest-cov>=6.0.0",
          "pytest>=8.3.4",
          "ruff>=0.9.0",
          "autogitsemver>=0.7.8",
      ]
      
      [tool.hatch.version]
      path = "src/this_is_the_project_name/__init__.py"
      
      [tool.pytest.ini_options]
      addopts = "--verbose -vv --capture=no --cov=this_is_the_project_name --cov-fail-under=95.0"
      
      [tool.ruff]
      line-length = 110
      
      [tool.ruff.lint]
      exclude = ["tests/**"]
      
      select = ["ALL"]
      
      ignore = [
          "ANN002", # Missing type annotation for `*args`
          "ANN003", # Missing type annotation for `**kwargs`
          "BLE001", # Do not catch blind exception: `Exception`
          "COM812", # Trailing comma missing
          "D202", # No blank lines allowed after function docstring
          "E501", # Line too long
          "I001", # Import block is un-sorted or un-formatted
          "N802", # Function name `xxx` should be lowercase
          "N999", # Invalid module name
          "S101", # Use of assert detected
          "UP032", # Use f-string instead of `format` call
      ]
      
      [tool.ruff.lint.mccabe]
      max-complexity = 15
      
      [tool.ruff.lint.pylint]
      max-args = 10
      max-branches = 20
      max-returns = 20
  
    ''',
    'src/AutoGitSemVer.yaml': '''
      # This file is used by AutoGitSemVer to configure the semantic version of this package. It indicates
      # that AutoGitSemVer should only look at changes in this directory, its descendants, and files
      # specified in this list when calculating the semantic version for the package.
      additional_dependencies:
        - "../pyproject.toml"
        - "../README.md"
        - "../uv.lock"
  
    ''',
    'src/this_is_the_project_name/__init__.py': '''
      def hello() -> str:
          return "Hello from this-is-the-project-name!"
      
      # Wheel names will be generated according to this value. Do not manually modify this value; instead
      # update it according to committed changes by running this command from the root of the repository:
      #
      #   uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/this_is_the_project_name/__init__.py ./src
      #
      __version__ = "0.1.0"
  
    ''',
    'src/this_is_the_project_name/py.typed': '',
  })
# ---
